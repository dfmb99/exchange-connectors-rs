<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" ENABLED="true" />
    </configurations>
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/Cargo.toml" />
    <cargoProject FILE="$PROJECT_DIR$/src/binance-rs/Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b5ae014b-2700-47fa-b6f9-f161fec1a278" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/binance-connector-rs.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Cargo.toml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/.github/workflows/rust.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/.rustfmt.toml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/.travis.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/Cargo.toml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/benches/websocket_benchmark.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/examples/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/examples/binance_endpoints.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/examples/binance_futures_endpoints.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/examples/binance_futures_userstream.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/examples/binance_futures_websockets.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/examples/binance_save_all_trades.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/examples/binance_websockets.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/account.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/api.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/client.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/config.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/errors.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/futures/account.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/futures/general.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/futures/market.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/futures/mod.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/futures/model.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/futures/userstream.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/futures/websockets.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/general.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/lib.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/market.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/model.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/savings.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/userstream.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/util.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/src/websockets.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/account_tests.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/futures_account_tests.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/futures_market_test.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/general_tests.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/market_tests.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/account/cancel_all_open_orders.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/account/cancel_order.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/account/get_account.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/account/get_open_orders.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/account/limit_buy.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/account/limit_sell.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/account/market_buy.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/account/market_buy_using_quote_quantity.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/account/market_sell.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/account/market_sell_using_quote_quantity.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/account/order_status.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/account/stop_limit_buy.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/account/stop_limit_sell.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/account/trade_history.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/futures/account/cancel_all_open_orders.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/futures/account/change_initial_leverage.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/futures/account/change_position_mode.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/futures/account/stop_market_close_position_buy.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/futures/account/stop_market_close_position_sell.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/futures/market/open_interest_statistics.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/general/exchange_info.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/general/server_time.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/market/get_24h_price_stats.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/market/get_all_24h_price_stats.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/market/get_all_book_tickers.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/market/get_all_prices.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/market/get_average_price.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/market/get_book_ticker.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/market/get_depth.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/market/get_klines.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/mocks/market/get_price.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance-rs/tests/util_tests.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/examples/run_ws.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/binance_interface.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/lib.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ws.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ws_fut_data.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/ws_tests.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="0pllyf5l" />
  </component>
  <component name="ProjectId" id="2HkhMIwcQEyrQyVl6RWjRQKTaUS" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="RunOnceActivity.cidr.known.project.marker" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="cf.first.check.clang-format" value="false" />
    <property name="cidr.known.project.marker" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="org.rust.cargo.project.model.PROJECT_DISCOVERY" value="true" />
  </component>
  <component name="RunManager">
    <configuration default="true" type="GradleAppRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="com.jetbrains.cidr.cpp.gradle.execution.GradleNativeBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$USER_HOME$/.cargo/bin" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b5ae014b-2700-47fa-b6f9-f161fec1a278" name="Default Changelist" comment="" />
      <created>1668834939534</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1668834939534</updated>
      <workItem from="1668834941398" duration="1212000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>