name: CI Checks

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Rustfmt (${{ matrix.pkg }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pkg: [binance, bitmex, okex, bitfinex]
    steps:
      - uses: actions/checkout@v4

      # Install Rust toolchain (stable) + rustfmt
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt

      # Speed up builds across jobs
      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target
          key: fmt-${{ matrix.pkg }}

      - name: Check formatting
        run: cargo fmt --package ${{ matrix.pkg }} -- --check

  build_test_clippy:
    name: Build/Test/Clippy (${{ matrix.pkg }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pkg: [binance, bitmex, okex, bitfinex]
    steps:
      - uses: actions/checkout@v4

      # Install Rust toolchain (stable) + clippy
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy

      # Speed up builds across jobs
      - name: Cache Rust
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target
          key: build-${{ matrix.pkg }}

      - name: Build ${{ matrix.pkg }}
        run: cargo build -p ${{ matrix.pkg }}

      - name: Clippy ${{ matrix.pkg }}
        run: cargo clippy -p ${{ matrix.pkg }} -- -D warnings

      - name: Test ${{ matrix.pkg }}
        run: cargo test -p ${{ matrix.pkg }}
